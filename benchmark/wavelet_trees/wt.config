# This file specifies wavelettrees that are used in the benchmark.
#
# Each index is specified by a triple: ID;SDSL_TYPE;LATEX_NAME
# * ID : An identifier for the index. Only letters and underscores
# are allowed in ID.
# * SDSL_TYPE : Corresponding sdsl type.
# * LATEX_NAME: LaTeX name for output in the benchmark report.

# Different Shapes and Bit-Vectors (Byte-Alphabet):
#BLCD_v;wt_blcd<bit_vector, rank_support_v<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-BLCD-v
#BLCD_v5;wt_blcd<bit_vector, rank_support_v5<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-BLCD-v5
#BLCD_il;wt_blcd<bit_vector_il<>, rank_support_il<>, select_support_il<1>, select_support_il<0>, byte_tree<>>;WT-BLCD-il
#BLCD_RRR15;wt_blcd<rrr_vector<15>, rrr_vector<15>::rank_1_type, rrr_vector<15>::select_1_type, rrr_vector<15>::select_0_type, byte_tree<>>;WT-BLCD-RRR15
#BLCD_RRR63;wt_blcd<rrr_vector<63>, rrr_vector<63>::rank_1_type, rrr_vector<63>::select_1_type, rrr_vector<63>::select_0_type, byte_tree<>>;WT-BLCD-RRR63
#HUTU_v;wt_hutu<bit_vector, rank_support_v<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-HUTU-v
#HUTU_v5;wt_hutu<bit_vector, rank_support_v5<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-HUTU-v5
#HUTU_il;wt_blcd<bit_vector_il<>, rank_support_il<>, select_support_il<1>, select_support_il<0>, byte_tree<>>;WT-HUTU-il
#HUTU_RRR15;wt_hutu<rrr_vector<15>, rrr_vector<15>::rank_1_type, rrr_vector<15>::select_1_type, rrr_vector<15>::select_0_type, byte_tree<>>;WT-HUTU-RRR15
#HUTU_RRR63;wt_hutu<rrr_vector<63>, rrr_vector<63>::rank_1_type, rrr_vector<63>::select_1_type, rrr_vector<63>::select_0_type, byte_tree<>>;WT-HUTU-RRR63
##HUFF_v;wt_hutu<bit_vector, rank_support_v<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-HUFF-v
##HUFF_v5;wt_hutu<bit_vector, rank_support_v5<>, select_support_mcl<1>, select_support_mcl<0>, byte_tree<>>;WT-HUFF-v5
##HUFF_il;wt_blcd<bit_vector_il<>, rank_support_il<>, select_support_il<1>, select_support_il<0>, byte_tree<>>;WT-HUFF-il
##HUFF_RRR15;wt_huff<rrr_vector<15>, rrr_vector<15>::rank_1_type, rrr_vector<15>::select_1_type, rrr_vector<15>::select_0_type, byte_tree<>>;WT-HUFF-RRR15
##HUFF_RRR63;wt_huff<rrr_vector<63>, rrr_vector<63>::rank_1_type, rrr_vector<63>::select_1_type, rrr_vector<63>::select_0_type, byte_tree<>>;WT-HUFF-RRR63

# Different Shapes and Bit-Vectors (Int-Alphabet):
HUTU_v;wt_hutu<bit_vector, rank_support_v<>, select_support_mcl<1>, select_support_mcl<0>, int_tree<>>;WT-HUTU-v
#HUFF_v;wt_huff<bit_vector, rank_support_v<>, select_support_mcl<1>, select_support_mcl<0>, int_tree<>>;WT-HUFF-v
#HUFF_v5;wt_huff<bit_vector, rank_support_v5<>, select_support_mcl<1>, select_support_mcl<0>, int_tree<>>;WT-HUFF-v5
#HUFF_il;wt_huff<bit_vector_il<>, rank_support_il<>, select_support_il<1>, select_support_il<0>, int_tree<>>;WT-HUFF-il
#HUFF_RRR15;wt_huff<rrr_vector<15>, rrr_vector<15>::rank_1_type, rrr_vector<15>::select_1_type, rrr_vector<15>::select_0_type, int_tree<>>;WT-HUFF-RRR15
#HUFF_RRR63;wt_huff<rrr_vector<63>, rrr_vector<63>::rank_1_type, rrr_vector<63>::select_1_type, rrr_vector<63>::select_0_type, int_tree<>>;WT-HUFF-RRR63
